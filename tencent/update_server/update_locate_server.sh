#!/bin/sh
# 这个脚本不是很完善 有很多需要改进的地方，现在只是写一个能用的就行
UPDATE_SQL_FILE="/data0/wg_sql/lj_db_update.sql"
DB_INIT_SQL_FILE="/data0/wg_db_init/lj_db_init.sql"
DB_LOG_REASONSQL_FILE="/data0/wg_sql/LogReasonsAutoGenerated.sql"
UPDATE_DB=false
AUTO_START=false
INIT_SERVER=false
DEPLOY=true

DB_NAME="wg_lj"
MYSQL_ROOT_PW="xssx1by"
DATA_COUNT=`ls -lh / | egrep "data[0-1|5-6]" | wc -l`

while getopts "uain" arg
do
	case $arg in
		u)
			UPDATE_DB=true
			;;
		a)
			AUTO_START=true
			;;
		i)
			INIT_SERVER=true
			;;
		n)
			DEPLOY=false
			;;
		?)
			echo "unkonw argument"
			exit 1
			;;
	esac
done

echo "UPDATE_DB=$UPDATE_DB"
echo "AUTO_START"=$AUTO_START
echo "INIT_SERVER"=$INIT_SERVER
echo "DEPLOY"=$INIT_SERVER

#stop all gameserver
if [ $INIT_SERVER == false ]; then

    echo "stopping all gameserver...."
    cd /
    for file in `ls`
    do
        if [[ $file =~ "data" ]] && [ $file != "data" ] && [ $file != "data2" ] && [ $file != "data3" ]; then
            echo "/"$file is stoping ...."/"$file/wg_script/gameserver_launch.sh stop....
            cd "/"$file/wg_script
            sh gameserver_launch.sh stop
        fi
    done
    game_sleep=5
    game_count=$(ps -elf | grep java | grep game_server | grep -v "grep" | awk '{print $4}' | wc -l)
    for var in {1..10}
    do
        game_count=$(ps -elf | grep java | grep game_server | grep -v "grep" | awk '{print $4}' | wc -l)
        if [ $game_count -gt 0 ]; then
            echo sleep $game_sleep second the $var time, the game server is still alive....
            sleep $game_sleep
        else
            echo "game server stopped!"
            break
        fi
    done

    #强行杀掉
    if [ $game_count -gt 0 ]; then
        ps -ef | grep java | grep game_server | grep -v 'grep '|awk '{print $2}'|xargs kill
        sleep 10
    fi
    game_count=$(ps -elf | grep java | grep game_server | grep -v "grep" | awk '{print $4}' | wc -l)
    if [ $game_count -gt 0 ]; then
        echo "stop gameserver failed!!"
        exit 1
    else
        echo "gameserver stopped!"
    fi
    #stop logserver
    cd /
    echo "stopping all logserver...."
    for file in `ls`
    do
        if [[ $file =~ "data" ]] && [ $file != "data" ] && [ $file != "data2" ] && [ $file != "data3" ]; then
            echo "/"$file is stoping "/"$file/wg_script/logserver_launch.sh stop....
            cd "/"$file/wg_script
            sh logserver_launch.sh stop
        fi
    done
    log_sleep=2
    log_count=$(ps -elf | grep log_server | grep -v "grep" | awk '{print $4}' | wc -l)
    for var in {1..10}
    do
        log_count=$(ps -elf | grep log_server | grep -v "grep" | awk '{print $4}' | wc -l)
        if [ $log_count -gt 0 ]; then
            echo sleep $log_sleep second the $var time, the log server is still alive....
            sleep $log_sleep
        else
            echo "log server stopped!"
            break
        fi
    done
    #杀掉 -9?
    if [ $log_count -gt 0 ]; then
        ps -ef | grep java | grep log_server | grep -v 'grep '|awk '{print $2}' |xargs kill
        sleep 10
    fi
    log_count=$(ps -elf | grep java | grep log_server | grep -v "grep" | awk '{print $4}' | wc -l)
    if [ $log_count -gt 0 ]; then
        echo "stop logserver failed!!"
        exit 1
    else
        echo "logserver stopped"
    fi
    #back up mysql
fi
echo stop all server ececuted !!
sleep 2

if $DEPLOY; then
	#start deploy
    cd /
    for file in `ls`
    do
        if [[ $file =~ "data" ]] && [ $file != "data" ] && [ $file != "data2" ] && [ $file != "data3" ]; then
            echo "/"$file being deploy ....
            cd "/"$file/wg_deploy
            sh deploy_current_path.sh
        fi
    done

fi

#execute update sql file
if $UPDATE_DB; then
	#check if db_update.sql exist
	if [ ! -f $UPDATE_SQL_FILE ]; then
		echo "$UPDATE_SQL_FILE not exit!!"
		exit 1
	else
		echo "executing db update scripts...!!"
        for i in `seq $DATA_COUNT`
        do
        port=`expr 3305 + $i`
            echo "executing $UPDATE_SQL_FILE for port = $port"
		    /usr/local/mysql/bin/mysql -uroot -p$MYSQL_ROOT_PW -h127.0.0.1 -P$port wg_lj < $UPDATE_SQL_FILE
		    #/usr/local/mysql/bin/mysql -uroot -p$MYSQL_ROOT_PW -h127.0.0.1 -P$port -e "source /data0/wg_sql/lj_db_update.sql" -f
            echo 'update all $port db finished '
        done
	fi
fi
sleep 2

if $INIT_SERVER; then
	#check if lj_db_init.sql exist
	if [ ! -f $DB_INIT_SQL_FILE ]; then
		echo "$DB_INIT_SQL_FILE not exit!!"
		exit 1
	else
		wg_lj_count=`/usr/local/mysql/bin/mysql -uroot -p$MYSQL_ROOT_PW -h127.0.0.1 -e "show databases" | grep wg_lj | wc -l`
            if [ $wg_lj_count == 0 ]; then
		        echo "executing $DB_INIT_SQL_FILE"
		        /usr/local/mysql/bin/mysql -uroot -p$MYSQL_ROOT_PW -h127.0.0.1 < $DB_INIT_SQL_FILE
                /usr/local/mysql/bin/mysql -uroot -p$MYSQL_ROOT_PW -h127.0.0.1 < $DB_LOG_REASONSQL_FILE
                sleep 1
            fi
        left_count=`expr $DATA_COUNT - 1`
        for i in `seq $left_count`
        do
        port=`expr 3306 + $i`
        wg_lj_count=`/usr/local/mysql/bin/mysql -uroot -p$MYSQL_ROOT_PW -h127.0.0.1 -P$port -e "show databases" | grep wg_lj | wc -l`
            if [ $wg_lj_count == 0 ]; then
                echo "executing $DB_INIT_SQL_FILE to mysql port of $port"
                /usr/local/mysql/bin/mysql -uroot -p$MYSQL_ROOT_PW -h127.0.0.1 -P$port < $DB_INIT_SQL_FILE
                /usr/local/mysql/bin/mysql -uroot -p$MYSQL_ROOT_PW -h127.0.0.1 -P$port < $DB_LOG_REASONSQL_FILE
                echo "lj_db_init all $port db finished "
                sleep 1
            fi
        done
	fi
fi

#start servers
if $AUTO_START; then
	#start log_server
    cd /
    for file in `ls`
    do
        if [[ $file =~ "data" ]] && [ $file != "data" ] && [ $file != "data2" ] && [ $file != "data3" ]; then
            echo "/"$file begin start log_server ....
            cd "/"$file/wg_script
            sh logserver_launch.sh start
        fi
    done
	echo "log server started"
	sleep 5


	#start game_server
    cd /
    for file in `ls`
    do
        if [[ $file =~ "data" ]] && [ $file != "data" ] && [ $file != "data2" ] && [ $file != "data3" ]; then
            echo "/"$file begin start game_server ....
            cd "/"$file/wg_script
            sh gameserver_launch.sh start
        fi
    done
    sleep 5
	echo "game server started"
else
	echo "auto start server disabled, must start by manually!"
	exit 1
fi
